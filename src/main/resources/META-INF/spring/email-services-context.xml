<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:int="http://www.springframework.org/schema/integration"
       xmlns:int-jdbc="http://www.springframework.org/schema/integration/jdbc"
       xsi:schemaLocation="http://www.springframework.org/schema/integration
	    http://www.springframework.org/schema/integration/spring-integration.xsd
	    http://www.springframework.org/schema/integration/jdbc
	    http://www.springframework.org/schema/integration/jdbc/spring-integration-jdbc.xsd
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd">


    <int:gateway id="emailServicesGateway" service-interface="com.feisystems.icas.infrastructure.EmailServicesGateway"
                 default-reply-timeout="3000">
        <int:method name="sendVerificationToken" request-channel="emailVerificationRouterChannel"
                    request-timeout="3000"/>
    </int:gateway>

    <int:channel id="emailVerificationRouterChannel">
        <int:queue capacity="1000" message-store="emailVerificationMessageStore"/>
    </int:channel>

    <int:router id="emailVerificationRouter" input-channel="emailVerificationRouterChannel"
                expression="payload.getTokenType()">
        <int:poller fixed-rate="2000">
            <int:transactional/>
        </int:poller>
        <int:mapping value="emailConfirmation" channel="emailVerificationTokenSendChannel"/>
        <int:mapping value="emailRegistration" channel="emailRegistrationTokenSendChannel"/>
        <int:mapping value="lostPassword" channel="emailLostPasswordTokenSendChannel"/>
        <int:mapping value="lostPasswordAndSecurityQuestions" channel="emailLostPasswordAndSecurityQuestionsTokenSendChannel" />
    </int:router>

    <int:channel id="emailRegistrationTokenSendChannel"/>
    
    <int:service-activator id="emailVerficationMailSenderService" input-channel="emailVerificationTokenSendChannel"
                           output-channel="nullChannel" ref="mailSenderService"
                           method="sendVerificationEmail">
    </int:service-activator>

    <int:channel id="emailVerificationTokenSendChannel"/>
    
    <int:service-activator id="emailRegistrationMailSenderService" input-channel="emailRegistrationTokenSendChannel"
                           output-channel="nullChannel" ref="mailSenderService"
                           method="sendRegistrationEmail">
    </int:service-activator>

    <int:channel id="emailLostPasswordTokenSendChannel"/>
    
    <int:service-activator id="emailLostPasswordSenderService" input-channel="emailLostPasswordTokenSendChannel"
                           output-channel="nullChannel" ref="mailSenderService"
                           method="sendLostPasswordEmail">
    </int:service-activator>
    
    <int:channel id="emailLostPasswordAndSecurityQuestionsTokenSendChannel"/>
    
    <int:service-activator id="emailLostPasswordAndSecurityQuestionsSenderService" input-channel="emailLostPasswordAndSecurityQuestionsTokenSendChannel"
                           output-channel="nullChannel" ref="mailSenderService"
                           method="sendLostPasswordAndSecurityQuestionsEmail">
    </int:service-activator>
    
    

    <int:logging-channel-adapter id="emailVerificationLoggingChannel" level="DEBUG">

    </int:logging-channel-adapter>


    <int-jdbc:message-store id="emailVerificationMessageStore" data-source="dataSource" region="emailVerification"/>


</beans>